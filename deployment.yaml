apiVersion: v1
kind: Service
metadata:
  name: etcd
spec:
  ports:
  - name: client
    port: 2379
    protocol: TCP
    targetPort: 2379
  selector:
    app: etcd
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: etcd
    etcd_node: etcd0
  name: etcd0
spec:
  replicas: 1
  selector:
    app: etcd
    etcd_node: etcd0
  template:
    metadata:
      labels:
        app: etcd
        etcd_node: etcd0
    spec:
      containers:
      - command:
        - /usr/local/bin/etcd
        - --name
        - etcd0
        - --listen-client-urls
        - http://0.0.0.0:2379
        - --advertise-client-urls
        - http://etcd0:2379
        image: quay.io/coreos/etcd:latest
        name: etcd0
        ports:
        - containerPort: 2379
          name: client
          protocol: TCP
        - containerPort: 2380
          name: server
          protocol: TCP
      restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pxc-config
data:
  root_password: my_secure_root_password
  discovery_service: etcd:2379
  cluster_name: k8scluster1
  xtrabackup_passwod: my_secure_xtrabackup_password
  mysql_proxy_user: proxyuser
  mysql_proxy_password: s3cret
  prometheus_exporter_username: exporter
  prometheus_exporter_password: s3cret2
  prometheus_exporter_data_source_name: exporter:s3cret2@(127.0.0.1:3306)/
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: pxc-server
  labels:
    app: pxc-server
spec:
  # tells deployment to run N pods matching the template
  replicas: 3
  selector:
    app: pxc-server
  template: # create pods using pod definition in this template
    metadata:
      name: pxc
      labels:
        app: pxc-server
    spec:
      containers:
      - name: percona-xtradb-server
        imagePullPolicy: Always
        image: quay.io/galexrt/percona-xtradb-cluster:latest
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4567
        - containerPort: 4568
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: root_password
        - name: DISCOVERY_SERVICE
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: discovery_service
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: cluster_name
        - name: XTRABACKUP_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: xtrabackup_passwod
        - name: PROMETHEUS_EXPORTER
          value: "true"
        - name: PROMETHEUS_EXPORTER_USERNAME
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: prometheus_exporter_username
        - name: PROMETHEUS_EXPORTER_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: prometheus_exporter_password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      - name: mysqld-exporter
        image: prom/mysqld-exporter:latest
        ports:
        - containerPort: 9104
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: prometheus_exporter_data_source_name
      volumes:
      - name: mysql-persistent-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pxc-server
  labels:
    app: pxc-server
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
    - port: 9104
      targetPort: 9104
      name: "metrics"
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: pxc-server
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: proxysql
  labels:
    app: proxysql-app
spec:
  # tells deployment to run N pods matching the template
  replicas: 2
  selector:
    app: pxc-proxysql
    front: proxysql
  template: # create pods using pod definition in this template
    metadata:
      name: proxysql
      labels:
        app: pxc-proxysql
        front: proxysql
    spec:
      containers:
      - name: proxysql
        image: perconalab/proxysql
        ports:
        - containerPort: 3306
          name: "mysql"
        - containerPort: 6032
          name: "proxyadm"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: root_password
        - name: DISCOVERY_SERVICE
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: discovery_service
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: cluster_name
        - name: MYSQL_PROXY_USER
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: mysql_proxy_user
        - name: MYSQL_PROXY_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: pxc-config
              key: mysql_proxy_password
---
apiVersion: v1
kind: Service
metadata:
  name: pxc-service
  labels:
    app: pxc-proxysql
spec:
  ports:
    # the port that this service should serve on
    - port: 3306
      targetPort: 3306
      name: "mysql"
    - port: 6032
      targetPort: 6032
      name: "proxyadm"
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: pxc-proxysql
    front: proxysql
---
apiVersion: "monitoring.coreos.com/v1alpha1"
kind: "ServiceMonitor"
metadata:
  name: "pxc-server"
  labels:
    app: pxc-server
spec:
  selector:
    matchLabels:
      app: pxc-server
  endpoints:
  - port: "metrics"
    interval: 30s
